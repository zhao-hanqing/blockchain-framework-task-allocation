#!/bin/bash
# Starts an experiment
#
# Options:
# --reset    or -r  : will reset everything blockchain related
# --start    or -s  : will start the experiment
# --startz   or -sz : will start with no visualization
# --logs     or -l  : will display monitor.log for all robots
# --python   or -p  : will display python console for all robots
# Example: 
# . starter -r -s -l -p

source experimentconfig.sh

#Generate source point file
python3 ${EXPERIMENTFOLDER}/loop_functions/generate_source_pos.py

echo "+-----------------------------------------------------------+"
echo "MAINFOLDER IS $MAINFOLDER"

echo "+-----------------------------------------------------------+"
echo "Updating the ARGoS XML file"

envsubst < $ARGOSTEMPLATE > $ARGOSFILE

echo "+-----------------------------------------------------------+"
echo "Cleaning logs folder..."

eval $(echo "rm -rf logs/{$(($NUMROBOTS+1))..100}")


echo "+-----------------------------------------------------------+"
echo "Starting Experiment"

for opt in "$@"; do
if [[ $opt == "--logs" || $opt == "-l" ]]; then
    ./tmux-all -l monitor.log
fi

if [[ $opt == "--python" || $opt == "-p" ]]; then
    ./tmux-all -s python
fi
done

for opt in "$@"; do
if [[ $opt == "--start" || $opt == "-s" ]]; then
    argos3 -c $ARGOSFILE
fi

if [[ $opt == "--start-novis" || $opt == "-sz" ]]; then
    argos3 -z -c $ARGOSFILE
fi
done

